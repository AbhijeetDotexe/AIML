{"cells":[{"cell_type":"markdown","metadata":{"id":"5M6qZ7NsMjYS"},"source":["P8"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Dxo3KRSsQWv7"},"outputs":[],"source":["#Load Libraries\n","from pandas import read_csv\n","from pandas.plotting import scatter_matrix\n","from matplotlib import pyplot\n","from sklearn.model_selection import train_test_split\n","from sklearn.model_selection import cross_val_score\n","from sklearn.model_selection import StratifiedKFold\n","from sklearn.metrics import classification_report\n","from sklearn.metrics import accuracy_score\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.discriminant_analysis import LinearDiscriminantAnalysis\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.svm import SVC"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Wm4vjVQlH9bX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697373197177,"user_tz":-330,"elapsed":417,"user":{"displayName":"MCA22 Manoj Kumar Satapathy","userId":"06333953726233089071"}},"outputId":"9e18d6c6-33d0-4065-b101-3aa277a8fddb"},"outputs":[{"output_type":"stream","name":"stdout","text":["(150, 5)\n","    sepal-length  sepal-width  petal-length  petalwidth        class\n","0            5.1          3.5           1.4         0.2  Iris-setosa\n","1            4.9          3.0           1.4         0.2  Iris-setosa\n","2            4.7          3.2           1.3         0.2  Iris-setosa\n","3            4.6          3.1           1.5         0.2  Iris-setosa\n","4            5.0          3.6           1.4         0.2  Iris-setosa\n","5            5.4          3.9           1.7         0.4  Iris-setosa\n","6            4.6          3.4           1.4         0.3  Iris-setosa\n","7            5.0          3.4           1.5         0.2  Iris-setosa\n","8            4.4          2.9           1.4         0.2  Iris-setosa\n","9            4.9          3.1           1.5         0.1  Iris-setosa\n","10           5.4          3.7           1.5         0.2  Iris-setosa\n","11           4.8          3.4           1.6         0.2  Iris-setosa\n","12           4.8          3.0           1.4         0.1  Iris-setosa\n","13           4.3          3.0           1.1         0.1  Iris-setosa\n","14           5.8          4.0           1.2         0.2  Iris-setosa\n","15           5.7          4.4           1.5         0.4  Iris-setosa\n","16           5.4          3.9           1.3         0.4  Iris-setosa\n","17           5.1          3.5           1.4         0.3  Iris-setosa\n","18           5.7          3.8           1.7         0.3  Iris-setosa\n","19           5.1          3.8           1.5         0.3  Iris-setosa\n"]}],"source":["# Load dataset\n","url = \"https://raw.githubusercontent.com/jbrownlee/Datasets/master/iris.csv\"\n","names = ['sepal-length' , 'sepal-width' , 'petal-length' , 'petalwidth'\n",", 'class']\n","dataset = read_csv(url , names = names)\n","# shape\n","print(dataset.shape)\n","#head peek your dataset, see first 20 rows\n","print(dataset.head(20))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BB9ybZTKIDhE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697373208572,"user_tz":-330,"elapsed":603,"user":{"displayName":"MCA22 Manoj Kumar Satapathy","userId":"06333953726233089071"}},"outputId":"347df1a2-ae72-485c-db83-b8f72f8216f9"},"outputs":[{"output_type":"stream","name":"stdout","text":["       sepal-length  sepal-width  petal-length  petalwidth\n","count    150.000000   150.000000    150.000000  150.000000\n","mean       5.843333     3.054000      3.758667    1.198667\n","std        0.828066     0.433594      1.764420    0.763161\n","min        4.300000     2.000000      1.000000    0.100000\n","25%        5.100000     2.800000      1.600000    0.300000\n","50%        5.800000     3.000000      4.350000    1.300000\n","75%        6.400000     3.300000      5.100000    1.800000\n","max        7.900000     4.400000      6.900000    2.500000\n"]}],"source":["#descriptions , summarises each attribute\n","print(dataset.describe())"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fT-9KhLFIG61","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697373216957,"user_tz":-330,"elapsed":442,"user":{"displayName":"MCA22 Manoj Kumar Satapathy","userId":"06333953726233089071"}},"outputId":"574c8b3c-d272-49fa-baf8-7b3664b49018"},"outputs":[{"output_type":"stream","name":"stdout","text":["class\n","Iris-setosa        50\n","Iris-versicolor    50\n","Iris-virginica     50\n","dtype: int64\n"]}],"source":["#class distribution , to see number of rows that belong to each class\n","print(dataset.groupby('class').size())"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ryTNMrcRIKn_","colab":{"base_uri":"https://localhost:8080/","height":434},"executionInfo":{"status":"ok","timestamp":1697373225011,"user_tz":-330,"elapsed":1314,"user":{"displayName":"MCA22 Manoj Kumar Satapathy","userId":"06333953726233089071"}},"outputId":"67b17c37-116f-4188-b911-0e1f8178aa74"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 4 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["#box and whisker plots\n","dataset.plot(kind = 'box' , subplots = True , layout = (2 , 2) , sharex = False\n",", sharey = False)\n","pyplot.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gE0tv4kFIS-G","colab":{"base_uri":"https://localhost:8080/","height":452},"executionInfo":{"status":"ok","timestamp":1697373233834,"user_tz":-330,"elapsed":1232,"user":{"displayName":"MCA22 Manoj Kumar Satapathy","userId":"06333953726233089071"}},"outputId":"7864724e-79f3-4c6f-f64f-47908437e61c"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 4 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAh8AAAGzCAYAAACPa3XZAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABHTElEQVR4nO3dfVxUVf4H8M/MCIMog4ICGiBkrk+sWvgQGWqKEJnmSqttbqH563E0lbZd2bbA1DDd0izENBdzjbW1Fc3yiSUFLTDFbDV/ka74sBloPoCCjCNzfn/4Y9aRxxku996Z+bxfr3npPXPn3u+593L4cuecczVCCAEiIiIimWiVDoCIiIjcC5MPIiIikhWTDyIiIpIVkw8iIiKSFZMPIiIikhWTDyIiIpIVkw8iIiKSFZMPIiIikhWTDyIiIpIVkw9q0IgRIzBixIgm19u9ezc0Gg12797d6jG1lEajwfTp05UOg4hu09z2xlFTpkxBWFhYk+udPHkSGo0Ga9asafa6f/7zn1seoJth8kEu56uvvkJqaiouX76sdChE5AK2bt2K1NRUpcNwKUw+yOV89dVXmDt3LpMPIrJatWoViouLHfrs1q1bMXfuXIkjcm9tlA6AiIiotXl4eCgdAt2Cdz4UduXKFcyaNQthYWHQ6/UICAjA6NGjcfDgQes6+/btw4MPPghfX194e3tj+PDh+PLLL222k5qaCo1Gg++//x4TJ06EwWCAv78/Zs6cierqapt1MzMzMXLkSAQEBECv16NPnz7IyMiQvG72xH38+HFMmTIFHTp0gK+vL6ZOnYqqqiqbda9du4YXX3wRnTp1go+PD8aNG4cff/wRGo3Geks0NTUVL7/8MgAgPDwcGo0GGo0GJ0+etNnWpk2bEBERAb1ej759+2L79u2S159IbZy9vbl8+TJ0Oh2WLVtmLfv555+h1Wrh7++PWx/S/vzzzyMoKMi6XF+fj8uXL2PKlCnw9fVFhw4dkJiYWOeO6ZQpU5Ceng4A1vZEo9HUiW3lypXo3r079Ho9Bg0ahP379ztUR3fBOx8Ke+655/DJJ59g+vTp6NOnDy5cuIC9e/fif//3f3HPPffgiy++QHx8PCIjI5GSkgKtVmv9Yd6zZw8GDx5ss72JEyciLCwMaWlpKCwsxLJly3Dp0iWsXbvWuk5GRgb69u2LcePGoU2bNtiyZQteeOEFWCwWGI1GSerlSNzh4eFIS0vDwYMH8cEHHyAgIABvvvmmdZ0pU6bg73//O5544gnce++9yMvLw5gxY2y2M2HCBPzwww/429/+hiVLlqBTp04AgM6dO1vX2bt3LzZu3IgXXngBPj4+WLZsGRISEnD69Gn4+/tLUn8iNXL29qZDhw6IiIhAfn4+XnzxRQA3f541Gg0uXryIo0ePom/fvgCAPXv2IDo6usFtCSHwyCOPYO/evXjuuefQu3dvZGdnIzEx0Wa9Z599FmfPnkVOTg7++te/1rutrKwsXLlyBc8++yw0Gg0WLVqECRMm4MSJE7zj0hBBivL19RVGo7He9ywWi+jRo4eIi4sTFovFWl5VVSXCw8PF6NGjrWUpKSkCgBg3bpzNNl544QUBQHz77bc2n79dXFycuPPOO23Khg8fLoYPH95kHXbt2iUAiF27djkc91NPPWWzzV/96lfC39/fulxUVCQAiFmzZtmsN2XKFAFApKSkWMsWL14sAIiSkpI6sQIQnp6e4vjx49ayb7/9VgAQ7777bpN1JXJmrtDeGI1GERgYaF1OSkoSw4YNEwEBASIjI0MIIcSFCxeERqMR77zzjnW9xMRE0a1bN+vypk2bBACxaNEia9mNGzdEdHS0ACAyMzNt9lnfr8uSkhIBQPj7+4uLFy9ayzdv3iwAiC1btjRZH3fFr10U1qFDB+zbtw9nz56t896hQ4dw7NgxPP7447hw4QJ+/vln/Pzzz6isrMSoUaOQn58Pi8Vi85nb/5KYMWMGgJsdpmq1bdvW+v/y8nL8/PPPGD58OE6cOIHy8vIW18mRuJ977jmb5ejoaFy4cAEVFRUAYP1a5IUXXqi3fvaIiYlB9+7drcv9+vWDwWDAiRMn7N4WkTNxhfYmOjoaZWVl1s6je/bswbBhwxAdHY09e/YAuHk3RAjR6J2PrVu3ok2bNnj++eetZTqdzqE2ZdKkSejYsaNNjADYpjSCX7sobNGiRUhMTERISAgiIyPx0EMP4cknn8Sdd96JY8eOAUCd24C3Ki8vt7noe/ToYfN+9+7dodVqbfo8fPnll0hJSUFBQUGdfhXl5eXw9fWtd1+lpaU2y76+vjYNSy1H4g4NDbV5v/a9S5cuwWAw4NSpU9BqtQgPD7dZ76677mpwHw25fV+1+7t06ZLd2yJyJq7Q3tT+Yt+zZw+Cg4PxzTffYP78+ejcubN1vo09e/bAYDCgf//+Ddbl1KlT6NKlC9q3b29T3rNnzwY/05DG2i+qH5MPhU2cOBHR0dHIzs7Gzp07sXjxYrz55pvYuHGj9a+MxYsXY8CAAfV+/vYfnNvd3jHq3//+N0aNGoVevXrh7bffRkhICDw9PbF161YsWbKkzl82t+rSpYvNcmZmJqZMmVJnPUfi1ul09a4nbulAJhU590WkJq7Q3nTt2hXh4eHIz89HWFgYhBCIiopC586dMXPmTJw6dQp79uzBfffdB61Wnpv7bFPsx+RDBbp06YIXXngBL7zwAs6dO4d77rkHCxYswJIlSwAABoMBMTExzdrWsWPHbO4OHD9+HBaLxdrLe8uWLTCZTPj0009tsvVdu3Y1ue2cnByb5dqOXber/UrDnrib0q1bN1gsFpSUlNj8tXX8+PE669bXE52IbnKF9iY6Ohr5+fkIDw/HgAED4OPjg/79+8PX1xfbt2/HwYMHm5yXo1u3bsjNzcXVq1dtkqr65gJhmyI99vlQUE1NTZ3vPAMCAtC1a1eYTCZERkaie/fu+POf/4yrV6/W+fz58+frlNUOCav17rvvAgDi4+MB/DdDvzUjLy8vR2ZmZpPxxsTE2Lxu/8ukliNxNyUuLg4AsHz5cpvy2vrdql27dgDAScaIbuFK7U10dDROnjyJjz/+2Po1jFarxX333Ye3334bZrO50f4eAPDQQw/hxo0bNsN+a2pq2KbIhHc+FHTlyhUEBwfj0UcfRf/+/dG+fXv885//xP79+/HWW29Bq9Xigw8+QHx8PPr27YupU6fijjvuwI8//ohdu3bBYDBgy5YtNtssKSnBuHHj8OCDD6KgoADr1q3D448/bv3uMzY2Fp6enhg7diyeffZZXL16FatWrUJAQAB++uknSerlSNxNiYyMREJCApYuXYoLFy5Yh9r+8MMPAGz/MomMjAQAvPLKK3jsscfg4eGBsWPHWhsQInfkSu1NbWJRXFyMN954w1o+bNgwbNu2zTrXRmPGjh2LoUOHYs6cOTh58iT69OmDjRs31tsJtrZNefHFFxEXFwedTofHHnvM4fgJHGqrJJPJJF5++WXRv39/4ePjI9q1ayf69+8vli9fbrPeN998IyZMmCD8/f2FXq8X3bp1ExMnThS5ubnWdWqHvh09elQ8+uijwsfHR3Ts2FFMnz5dXLt2zWZ7n376qejXr5/w8vISYWFh4s033xR/+ctf6gxPdXSorSNxnz9/3uazmZmZdeKprKwURqNR+Pn5ifbt24vx48eL4uJiAUAsXLjQ5vPz5s0Td9xxh9BqtTbbAVDvUMNu3bqJxMTEJutK5Kxcpb2pFRAQIACIsrIya9nevXsFABEdHV1n/duH2gpxc0juE088IQwGg/D19RVPPPGE+Oabb+oMtb1x44aYMWOG6Ny5s9BoNNZht7VDbRcvXlxnf7htCgCypRGCPWJcQWpqKubOnYvz589bJ9ZyB4cOHcLdd9+NdevWYfLkyUqHQ+QW3LW9Iemwzwc5jWvXrtUpW7p0KbRaLYYNG6ZARERE5Aj2+SCnsWjRIhQVFeGBBx5AmzZtsG3bNmzbtg3PPPMMQkJClA6PiIiaickHOY377rsPOTk5mDdvHq5evYrQ0FCkpqbilVdeUTo0IiKyA/t8EBERkazY54OIiIhkxeSDiIiIZKW6Ph8WiwVnz56Fj48Pp7QlkpgQAleuXEHXrl1le+6F2rCNIWod9rQvqks+zp49y5ELRK3szJkzCA4OVjoMRbCNIWpdzWlfVJd8+Pj4ALgZvMFgUDga+5nNZuzcuROxsbHw8PBQOhxJuWrdXLVeQN26VVRUICQkxPpz5o6a08a48jUhJx5HaTjLcbSnfVFd8lF7G9RgMDht8uHt7Q2DwaDqi8QRrlo3V60X0HDd3Pnrhua0Ma58TciJx1EaznYcm9O+uOeXvkRERKQYJh9EREQkKyYfREREJCsmH0RERCQr1XU4pfqFzflc0u2dXDhG0u0REdWqba/0OoFFg4GI1B0w1TjeyZntlevhnQ8iIiKSFZMPIiIikhWTDyIiIpIVkw8iIiKSFZMPIiIikhVHu1CLcSQOERHZg3c+iIiISFZMPoiIiEhWTD6IiIhIVkw+iIiISFZMPoiIiEhWTD6IiIhIVkw+iIiISFZMPoiIiEhWTD6IiIhIVkw+iIiISFZMPoiIiEhWTD6IiIhIVkw+iIiISFZMPoiIiEhWTD6IiIhIVkw+iIiISFZtlA5ATcLmfN7ibeh1AosGSxAMERGRi+KdDyIiIpIVkw8iIiKSFZMPIiIikhWTDyIiIpIVkw8iIiKSFUe7EJFqZGRkICMjAydPngQA9O3bF6+99hri4+MBANXV1XjppZewfv16mEwmxMXFYfny5QgMDFQwamptUoxErHVy4RjJtkWO450PIlKN4OBgLFy4EEVFRThw4ABGjhyJRx55BN999x0AYPbs2diyZQs2bNiAvLw8nD17FhMmTFA4aiKyF+98EJFqjB071mZ5wYIFyMjIQGFhIYKDg7F69WpkZWVh5MiRAIDMzEz07t0bhYWFuPfee5UImYgcwOSDiFSppqYGGzZsQGVlJaKiolBUVASz2YyYmBjrOr169UJoaCgKCgoaTD5MJhNMJpN1uaKiAgBgNpthNpvr/UxteUPvU+P0OnHzX63tv2rgjOfUWa5He+Jj8kFEqnL48GFERUWhuroa7du3R3Z2Nvr06YNDhw7B09MTHTp0sFk/MDAQpaWlDW4vLS0Nc+fOrVO+c+dOeHt7NxpLTk6OQ3Vwd7fP8jxvoEWZQOqxdetWpUNwmNqvx6qqqmavy+SDiFSlZ8+eOHToEMrLy/HJJ58gMTEReXl5Dm8vOTkZSUlJ1uWKigqEhIQgNjYWBoOh3s+YzWbk5ORg9OjR8PDwcHjf7ioidQeAm3c85g204NUDWpgsGoWjuulIapzSIdjNWa7H2ruKzcHkg4hUxdPTE3fddRcAIDIyEvv378c777yDSZMm4fr167h8+bLN3Y+ysjIEBQU1uD29Xg+9Xl+n3MPDo8mGvDnrUF2mGttEw2TR1ClTijOfT7Vfj/bEZtdol7S0NAwaNAg+Pj4ICAjA+PHjUVxcbLNOdXU1jEYj/P390b59eyQkJKCsrMye3RARWVksFphMJkRGRsLDwwO5ubnW94qLi3H69GlERUUpGCER2cuu5CMvLw9GoxGFhYXIycmB2WxGbGwsKisrretwKBwROSo5ORn5+fk4efIkDh8+jOTkZOzevRuTJ0+Gr68vpk2bhqSkJOzatQtFRUWYOnUqoqKiONKFyMnY9bXL9u3bbZbXrFmDgIAAFBUVYdiwYSgvL+dQOCJy2Llz5/Dkk0/ip59+gq+vL/r164cdO3Zg9OjRAIAlS5ZAq9UiISHBZpIxInIuLerzUV5eDgDw8/MDAIeGwjkyDK611A4Pa9E2/n9ImdSxSxHbrRyJr6HhXmqITYr9qX0YmyNur5va67h69epG3/fy8kJ6ejrS09NlioiIWoPDyYfFYsGsWbMwdOhQREREAABKS0vtHgrXkmFwUrt9eFhLSD0kSsrYgJYNN7u9bmqKrSXUPoytJWrrZs9QOCKi1uJw8mE0GnHkyBHs3bu3RQE4MgyutdQOD2uJ2qFlUg+JkiK2Wzky3Kyh4V5qiK0lnGUYmyNur5s9Q+GIiFqLQ8nH9OnT8dlnnyE/Px/BwcHW8qCgILuHwrVkGJzUpBwKJnX8Ug9Ta0lst9dNTbG1dL+ulnzUqq2bq9aPiJyLXaNdhBCYPn06srOz8cUXXyA8PNzmfQ6FIyIioqbYdefDaDQiKysLmzdvho+Pj7Ufh6+vL9q2bWszFM7Pzw8GgwEzZszgUDgiIiKysiv5yMjIAACMGDHCpjwzMxNTpkwBwKFwRERE1Di7kg8hmh5SyaFwRERE1Bi7+nwQERERtRSTDyIiIpIVkw8iIiKSFZMPIiIiklWLnu1C1BrC5nwu2bZOLhwj2baIiEgavPNBREREsmLyQURERLJi8kFERESyYvJBREREsmLyQURERLLiaBciIjcn5QgzoubgnQ8iIiKSFZMPIiIikhWTDyIiIpIVkw8iIiKSFZMPIiIikhVHu7gpR3q363UCiwYDEak7YKrRtEJURETkDnjng4iIiGTFOx9ERE6Ic3OQM+OdDyIiIpIVkw8iIiKSFZMPIiIikhWTDyJShbS0NAwaNAg+Pj4ICAjA+PHjUVxcbLNOdXU1jEYj/P390b59eyQkJKCsrEyhiInIUUw+iEgV8vLyYDQaUVhYiJycHJjNZsTGxqKystK6zuzZs7FlyxZs2LABeXl5OHv2LCZMmKBg1ETkCI52ISJV2L59u83ymjVrEBAQgKKiIgwbNgzl5eVYvXo1srKyMHLkSABAZmYmevfujcLCQtx7771KhE1EDmDyQUSqVF5eDgDw8/MDABQVFcFsNiMmJsa6Tq9evRAaGoqCgoIGkw+TyQSTyWRdrqioAACYzWaYzeZ6P1Nb3tD7aqDXCaVDaJJeK2z+VQM1n9OGOMP1CNgXH5MPIlIdi8WCWbNmYejQoYiIiAAAlJaWwtPTEx06dLBZNzAwEKWlpQ1uKy0tDXPnzq1TvnPnTnh7ezcaR05Ojv3By2TRYKUjaL55Ay1Kh2C1detWpUNwmJqvRwCoqqpq9rpMPloJpyAncpzRaMSRI0ewd+/eFm8rOTkZSUlJ1uWKigqEhIQgNjYWBoOh3s+YzWbk5ORg9OjR8PDwaHEMrSEidYfSITRJrxWYN9CCVw9oYbKooz08khqndAh2c4brEfjvXcXmYPJBRKoyffp0fPbZZ8jPz0dwcLC1PCgoCNevX8fly5dt7n6UlZUhKCiowe3p9Xro9fo65R4eHk025M1ZRynO9MeNyaJRTbxqPZ/NoebrEbDv2HK0CxGpghAC06dPR3Z2Nr744guEh4fbvB8ZGQkPDw/k5uZay4qLi3H69GlERUXJHS4RtQDvfBCRKhiNRmRlZWHz5s3w8fGx9uPw9fVF27Zt4evri2nTpiEpKQl+fn4wGAyYMWMGoqKiONKFyMkw+SAiVcjIyAAAjBgxwqY8MzMTU6ZMAQAsWbIEWq0WCQkJMJlMiIuLw/Lly2WOlIhaiskHEamCEE0Px/Ty8kJ6ejrS09NliIiIWgv7fBAREZGsmHwQERGRrJh8EBERkayYfBAREZGsmHwQERGRrJh8EBERkayYfBAREZGsmHwQERGRrJh8EBERkayYfBAREZGsmHwQERGRrJh8EBERkayYfBAREZGs7E4+8vPzMXbsWHTt2hUajQabNm2yeV8Igddeew1dunRB27ZtERMTg2PHjkkVLxERETk5u5OPyspK9O/fv8FHWi9atAjLli3DihUrsG/fPrRr1w5xcXGorq5ucbBERETk/NrY+4H4+HjEx8fX+54QAkuXLsWf/vQnPPLIIwCAtWvXIjAwEJs2bcJjjz3WsmiJiIjI6dmdfDSmpKQEpaWliImJsZb5+vpiyJAhKCgoqDf5MJlMMJlM1uWKigoAgNlshtlsljK8Jul1ouXb0Aqbf12JM9atOddQ7TpyX29yuL1urlhHInI+kiYfpaWlAIDAwECb8sDAQOt7t0tLS8PcuXPrlO/cuRPe3t5ShtekRYOl29a8gRbpNqYyzlS3rVu3NnvdnJycVoxEWbV1q6qqUjgSIiKJkw9HJCcnIykpybpcUVGBkJAQxMbGwmAwyBpLROqOFm9DrxWYN9CCVw9oYbJoJIhKPZyxbkdS45pcx2w2IycnB6NHj4aHh4cMUcnn9rrV3lkkIlKSpMlHUFAQAKCsrAxdunSxlpeVlWHAgAH1fkav10Ov19cp9/DwkP0XgalGul+oJotG0u2piTPVzZ5rSIlrTi61dXPV+hGRc5F0no/w8HAEBQUhNzfXWlZRUYF9+/YhKipKyl0RERGRk7L7zsfVq1dx/Phx63JJSQkOHToEPz8/hIaGYtasWZg/fz569OiB8PBwvPrqq+jatSvGjx8vZdxERETkpOxOPg4cOIAHHnjAulzbXyMxMRFr1qzB73//e1RWVuKZZ57B5cuXcf/992P79u3w8vKSLur/Fzbnc8m3SURERK3L7uRjxIgREKLhoZYajQavv/46Xn/99RYFRkRERK6Jz3YhIiIiWTH5ICIiIlkx+SAiIiJZMfkgIiIiWTH5ICIiIlkpPr06EVGt/Px8LF68GEVFRfjpp5+QnZ1tM0eQEAIpKSlYtWoVLl++jKFDhyIjIwM9evRQLmhya1JO+XBy4RjJtqV2vPNBRKpRWVmJ/v37Iz09vd73Fy1ahGXLlmHFihXYt28f2rVrh7i4OFRXV8scKRG1BO98EJFqxMfHIz4+vt73hBBYunQp/vSnP+GRRx4BAKxduxaBgYHYtGkTHnvsMTlDJaIWYPJBRE6hpKQEpaWliImJsZb5+vpiyJAhKCgoaDD5MJlMMJlM1uXaJ/uazWaYzeZ6P1Nb3tD7aqDXNTzZo1rotcLmXzWQ+pxKeR6c+XoE7IuPyQcROYXS0lIAQGBgoE15YGCg9b36pKWlYe7cuXXKd+7cCW9v70b3mZOT40Ck8lg0WOkImm/eQIvSIVht3bpV0u1JeR6aik3N1yMAVFVVNXtdJh9E5NKSk5Otz6ACbt75CAkJQWxsLAwGQ72fMZvNyMnJwejRo+Hh4SFXqHaJSN2hdAhN0msF5g204NUDWpgsGqXDAQAcSY2TdHtSnoeGYnOG6xH4713F5mDyQUROISgoCABQVlaGLl26WMvLysowYMCABj+n1+uh1+vrlHt4eDTZkDdnHaWYatTxy7w5TBaNauKV+nxKWS9nvh4B+44tR7sQkVMIDw9HUFAQcnNzrWUVFRXYt28foqKiFIyMiOzFOx9EpBpXr17F8ePHrcslJSU4dOgQ/Pz8EBoailmzZmH+/Pno0aMHwsPD8eqrr6Jr1642c4EQNUbKeTnIcUw+iEg1Dhw4gAceeMC6XNtXIzExEWvWrMHvf/97VFZW4plnnsHly5dx//33Y/v27fDy8lIqZCJyAJMPcmnN+StHrxNYNPhmx7Gmvr+VegZCzo5oa8SIERCi4aGLGo0Gr7/+Ol5//XUZoyIiqbHPBxEREcmKyQcRERHJiskHERERyYrJBxEREcmKyQcRERHJiqNdiOzAOQLIUbx2iP6Ldz6IiIhIVkw+iIiISFZMPoiIiEhWTD6IiIhIVkw+iIiISFZMPoiIiEhWTD6IiIhIVkw+iIiISFZMPoiIiEhWTD6IiIhIVkw+iIiISFZ8tgsRUQMiUnfAVKNROgwil8M7H0RERCQrJh9EREQkKyYfREREJCsmH0RERCQrJh9EREQkKyYfREREJCsmH0RERCQrzvNBRESkAmFzPq+3XK8TWDRY+XlnTi4cI9m2eOeDiIiIZMXkg4iIiGTF5IOIiIhkxeSDiIiIZNVqyUd6ejrCwsLg5eWFIUOG4Ouvv26tXRGRm2H7QuTcWiX5+Pjjj5GUlISUlBQcPHgQ/fv3R1xcHM6dO9cauyMiN8L2hcj5tcpQ27fffhtPP/00pk6dCgBYsWIFPv/8c/zlL3/BnDlzbNY1mUwwmUzW5fLycgDAxYsXYTabG91PmxuVEkfecm0sAlVVFrQxa1Fjca1Hcbtq3VylXhcuXKhTZjabUVVVhQsXLsDDwwNXrlwBAAgh5A5PMva0L4BjbUztcXP2a0JprvKzpTS1HMf62phb2dW+CImZTCah0+lEdna2TfmTTz4pxo0bV2f9lJQUAYAvvviS8XXmzBmpf/RlYW/7IgTbGL74kvvVnPZF8jsfP//8M2pqahAYGGhTHhgYiO+//77O+snJyUhKSrIuWywWXLx4Ef7+/tBonC9TrqioQEhICM6cOQODwaB0OJJy1bq5ar2AunUTQuDKlSvo2rWr0qE5xN72BXCsjXHla0JOPI7ScJbjaE/7ovgMp3q9Hnq93qasQ4cOygQjIYPBoOqLpCVctW6uWi/Atm6+vr4KRyOvlrQxrnxNyInHURrOcByb275I3uG0U6dO0Ol0KCsrsykvKytDUFCQ1LsjIjfC9oXINUiefHh6eiIyMhK5ubnWMovFgtzcXERFRUm9OyJyI2xfiFxDq3ztkpSUhMTERAwcOBCDBw/G0qVLUVlZae2d7sr0ej1SUlLq3OZ1Ba5aN1etF+CadZOjfXHF46YEHkdpuOJx1AjROmPu3nvvPSxevBilpaUYMGAAli1bhiFDhrTGrojIzbB9IXJurZZ8EBEREdWHz3YhIiIiWTH5ICIiIlkx+SAiIiJZMfkgIiIiWTH5kEhqaio0Go3Nq1evXkqHJYkff/wRv/3tb+Hv74+2bdvil7/8JQ4cOKB0WC0WFhZW55xpNBoYjUalQ2uRmpoavPrqqwgPD0fbtm3RvXt3zJs3z6kfJieXtLQ0DBo0CD4+PggICMD48eNRXFysdFhOJyMjA/369bPOyBkVFYVt27YpHZZTW7hwITQaDWbNmqV0KJJQfHp1V9K3b1/885//tC63aeP8h/fSpUsYOnQoHnjgAWzbtg2dO3fGsWPH0LFjR6VDa7H9+/ejpqbGunzkyBGMHj0av/71rxWMquXefPNNZGRk4MMPP0Tfvn1x4MABTJ06Fb6+vnjxxReVDk/V8vLyYDQaMWjQINy4cQN//OMfERsbi6NHj6Jdu3ZKh+c0goODsXDhQvTo0QNCCHz44Yd45JFH8M0336Bv375Kh+d09u/fj/fffx/9+vVTOhTJcKitRFJTU7Fp0yYcOnRI6VAkNWfOHHz55ZfYs2eP0qG0ulmzZuGzzz7DsWPHnPKhhrUefvhhBAYGYvXq1dayhIQEtG3bFuvWrVMwMudz/vx5BAQEIC8vD8OGDVM6HKfm5+eHxYsXY9q0aUqH4lSuXr2Ke+65B8uXL8f8+fMxYMAALF26VOmwWoxfu0jo2LFj6Nq1K+68805MnjwZp0+fVjqkFvv0008xcOBA/PrXv0ZAQADuvvturFq1SumwJHf9+nWsW7cOTz31lFMnHgBw3333ITc3Fz/88AMA4Ntvv8XevXsRHx+vcGTOp7y8HMDNX5zkmJqaGqxfvx6VlZWcAt8BRqMRY8aMQUxMjNKhSMr5vxdQiSFDhmDNmjXo2bMnfvrpJ8ydOxfR0dE4cuQIfHx8lA7PYSdOnEBGRgaSkpLwxz/+Efv378eLL74IT09PJCYmKh2eZDZt2oTLly9jypQpSofSYnPmzEFFRQV69eoFnU6HmpoaLFiwAJMnT1Y6NKdisVgwa9YsDB06FBEREUqH43QOHz6MqKgoVFdXo3379sjOzkafPn2UDsuprF+/HgcPHsT+/fuVDkV6glrFpUuXhMFgEB988IHSobSIh4eHiIqKsimbMWOGuPfeexWKqHXExsaKhx9+WOkwJPG3v/1NBAcHi7/97W/iX//6l1i7dq3w8/MTa9asUTo0p/Lcc8+Jbt26iTNnzigdilMymUzi2LFj4sCBA2LOnDmiU6dO4rvvvlM6LKdx+vRpERAQIL799ltr2fDhw8XMmTOVC0pCTD5a0cCBA8WcOXOUDqNFQkNDxbRp02zKli9fLrp27apQRNI7efKk0Gq1YtOmTUqHIong4GDx3nvv2ZTNmzdP9OzZU6GInI/RaBTBwcHixIkTSofiMkaNGiWeeeYZpcNwGtnZ2QKA0Ol01hcAodFohE6nEzdu3FA6xBbh1y6t5OrVq/j3v/+NJ554QulQWmTo0KF1hhr+8MMP6Natm0IRSS8zMxMBAQEYM2aM0qFIoqqqClqtbXcunU4Hi8WiUETOQwiBGTNmIDs7G7t370Z4eLjSIbkMi8UCk8mkdBhOY9SoUTh8+LBN2dSpU9GrVy/84Q9/gE6nUygyaTD5kMjvfvc7jB07Ft26dcPZs2eRkpICnU6H3/zmN0qH1iKzZ8/GfffdhzfeeAMTJ07E119/jZUrV2LlypVKhyYJi8WCzMxMJCYmusTQaAAYO3YsFixYgNDQUPTt2xfffPMN3n77bTz11FNKh6Z6RqMRWVlZ2Lx5M3x8fFBaWgoA8PX1Rdu2bRWOznkkJycjPj4eoaGhuHLlCrKysrB7927s2LFD6dCcho+PT52+Ru3atYO/v79r9EFS+taLq5g0aZLo0qWL8PT0FHfccYeYNGmSOH78uNJhSWLLli0iIiJC6PV60atXL7Fy5UqlQ5LMjh07BABRXFysdCiSqaioEDNnzhShoaHCy8tL3HnnneKVV14RJpNJ6dBUD0C9r8zMTKVDcypPPfWU6Natm/D09BSdO3cWo0aNEjt37lQ6LKfnSn0+OM8HERERyYrzfBAREZGsmHwQERGRrJh8EBERkayYfBAREZGsmHxQHRqNBqmpqU2ul5qa6hTPQdm9ezc0Gg0++eQTpUMhokY0t+1pyogRIzBixIgm16ttG3bv3t3sddmOSIPJh4vJyspyiSceOsKd606kNFf5+XOVeqgdkw8X484/OO5cdyKlqennb+fOndi5c6dDn1VTPVyZa0zpSERE9P88PT2VDoGawDsfCqvtN/H9999j4sSJMBgM8Pf3x8yZM1FdXW2z7rp16xAZGYm2bdvCz88Pjz32GM6cOWN9f8SIEfj8889x6tQpaDQaaDQahIWFAQCuX7+O1157DZGRkfD19UW7du0QHR2NXbt2SV6npuKsjTUiIgJHjx7FAw88AG9vb9xxxx1YtGhRne2dOnUK48aNQ7t27RAQEIDZs2djx44dNt/VNlb3WhaLBQsWLEBwcDC8vLwwatQoHD9+XPL6EzkDtbc9//rXv6DRaPDpp59ay4qKiqDRaHDPPffYrBsfH48hQ4bYxHN7n4///Oc/GD9+vE07cvuzZtiOyId3PlRi4sSJCAsLQ1paGgoLC7Fs2TJcunQJa9euBQAsWLAAr776KiZOnIj/+Z//wfnz5/Huu+9i2LBh+Oabb9ChQwe88sorKC8vx3/+8x8sWbIEANC+fXsAQEVFBT744AP85je/wdNPP40rV65g9erViIuLw9dff40BAwZIUo/mxFnr0qVLePDBBzFhwgRMnDgRn3zyCf7whz/gl7/8JeLj4wEAlZWVGDlyJH766SfMnDkTQUFByMrKqtNwNVb3WgsXLoRWq8Xvfvc7lJeXY9GiRZg8eTL27dsnSd2JnJFa256IiAh06NAB+fn5GDduHABgz5490Gq1+Pbbb1FRUQGDwQCLxYKvvvoKzzzzTIN1vHbtGkaNGoXTp0/jxRdfRNeuXfHXv/4VX3zxhc16bEdkpPT87u4uJSVFABDjxo2zKX/hhRcEAPHtt9+KkydPCp1OJxYsWGCzzuHDh0WbNm1syseMGSO6detWZz83btyo82yPS5cuicDAQPHUU0/ZlAMQKSkpzY69lj1xDh8+XAAQa9eutZaZTCYRFBQkEhISrGVvvfWWAGDzuPtr166JXr16CQBi165dTdZ9165dAoDo3bu3zTF45513BABx+PDhJutK5Gqcoe0ZM2aMGDx4sHV5woQJYsKECUKn04lt27YJIYQ4ePCgACA2b95sXW/48OFi+PDh1uWlS5cKAOLvf/+7tayyslLcddddbEcUwq9dVMJoNNosz5gxAwCwdetWbNy4ERaLBRMnTsTPP/9sfQUFBaFHjx7N+upEp9NZvwe1WCy4ePEibty4gYEDB+LgwYOS1MHeONu3b4/f/va31mVPT08MHjwYJ06csJZt374dd9xxh/UvHwDw8vLC008/bXd8U6dOtfkuODo6GgBs9kfkbtTc9kRHR+PgwYOorKwEAOzduxcPPfQQBgwYgD179gC4eTdEo9Hg/vvvb3A7W7duRZcuXfDoo49ay7y9vRu9W9IQtiPS4NcuKtGjRw+b5e7du0Or1eLkyZPQarUQQtRZp5aHh0ez9vHhhx/irbfewvfffw+z2WwtDw8Pb/Az169fx8WLF23KOnfuDJ1OV2fdY8eO2RVncHBwnXlCOnbsiH/961/W5VOnTqF79+511rvrrrsajLkhoaGhdfYF3Pz6h8hdqbXtAW7+Yr9x4wYKCgoQEhKCc+fOITo6Gt99951N8tGnTx/4+fk1uJ1Tp07hrrvuqtOO9OzZs1nx34rtiDSYfKjUrT8kFosFGo0G27Ztq/eX/u3fSdZn3bp1mDJlCsaPH4+XX34ZAQEB0Ol0SEtLw7///e8GP/fVV1/hgQcesCkrKSmp0wnLkTjrWwcARCs9aFnu/RE5I7W0PQAwcOBAeHl5IT8/H6GhoQgICMAvfvELREdHY/ny5TCZTNizZw9+9atf2V9RB7EdkQaTD5U4duyYzV8Bx48fh8ViQVhYGHQ6HYQQCA8Pxy9+8YtGt9PQjKOffPIJ7rzzTmzcuNFmnZSUlEa3179/f+Tk5NiUBQUF1btu9+7dmx1nc3Xr1g1Hjx6FEMIm7vp6lzvDbKtEaqPWtgf471exe/bsQWhoqPUrjujoaJhMJnz00UcoKyvDsGHDGt1Ot27dcOTIkTrtSHFxcbPrQdJinw+VSE9Pt1l+9913AdwcQjZhwgTodDrMnTu3TnYthMCFCxesy+3atUN5eXmd7ddm67d+ft++fSgoKGg0ro4dOyImJsbm5eXlVe+69sTZXHFxcfjxxx9thttVV1dj1apVddZtqO5E1DC1tj21oqOjsW/fPuzatcuafHTq1Am9e/fGm2++aV2nMQ899BDOnj1rMzV6VVUVVq5cWWddtiPy4J0PlSgpKcG4cePw4IMPoqCgAOvWrcPjjz+O/v37AwDmz5+P5ORknDx5EuPHj4ePjw9KSkqQnZ2NZ555Br/73e8AAJGRkfj444+RlJSEQYMGoX379hg7diwefvhhbNy4Eb/61a8wZswYlJSUYMWKFejTpw+uXr0qSR26d+/e7Dib69lnn8V7772H3/zmN5g5cya6dOmCjz76yJoA3fpXSkN1J6KGqb3tiY6OxoIFC3DmzBmbJGPYsGF4//33ERYWhuDg4Ea38fTTT+O9997Dk08+iaKiInTp0gV//etf4e3tXWddtiMykXl0Dd2mdrjb0aNHxaOPPip8fHxEx44dxfTp08W1a9ds1v3HP/4h7r//ftGuXTvRrl070atXL2E0GkVxcbF1natXr4rHH39cdOjQQQCwDhmzWCzijTfeEN26dRN6vV7cfffd4rPPPhOJiYl1hpXBwaG29sQ5fPhw0bdv3zqfrS+eEydOiDFjxoi2bduKzp07i5deekn84x//EABEYWFhk3WvHSK3YcMGm+2WlJQIACIzM7PJuhK5GmdpeyoqKoROpxM+Pj7ixo0b1vJ169YJAOKJJ56oU7fbh9oKIcSpU6fEuHHjhLe3t+jUqZOYOXOm2L59e52htmxH5KERgr1klJSamoq5c+fi/Pnz6NSpk9LhOI2lS5di9uzZ+M9//oM77rhD6XCInA7bHlIS+3yQ6l27ds1mubq6Gu+//z569OjBxIOIyAmxzwep3oQJExAaGooBAwagvLwc69atw/fff4+PPvpI6dCIiMgBTD5I9eLi4vDBBx/go48+Qk1NDfr06YP169dj0qRJSodGREQOYJ8PIiIikhX7fBAREZGsmHwQERGRrFTX58NiseDs2bPw8fHhNLdEEhNC4MqVK+jatSu0Wvf824NtDFHrsKd9UV3ycfbsWYSEhCgdBpFLO3PmTJOzQroqtjFEras57Yvqkg8fHx8AN4M3GAwKR9M4s9mMnTt3IjY2ttmPlnZVPBY3qf04VFRUICQkxPpz5o5q6/7BBx9g/PjxqjxPzkLt17uzcJXjaE/7orrko/Y2qMFgcIrkw9vbGwaDwakvGCnwWNzkLMfBnb9uqK27M5wntXOW613tXO04Nqd9cc8vfYmIiEgxTD6IiIhIVkw+iIiISFZMPoiIiEhWqutwao+wOZ9Lur2TC8dIuj0ictzChQuRnJyMmTNnYunSpQBuPtH4pZdewvr162EymRAXF4fly5cjMDBQ8v2zfSFqPbzzQUSqs3//frz//vvo16+fTfns2bOxZcsWbNiwAXl5eTh79iwmTJigUJRE5CgmH0SkKlevXsXkyZOxatUqdOzY0VpeXl6O1atX4+2338bIkSMRGRmJzMxMfPXVVygsLFQwYiKyl1N/7UJErsdoNGLMmDGIiYnB/PnzreVFRUUwm82IiYmxlvXq1QuhoaEoKCjAvffeW+/2TCYTTCaTdbmiosL6f7PZ3GAcep20D/xubF/OqrZOrlg3ObnKcbQnfiYfRKQa69evx8GDB7F///4675WWlsLT0xMdOnSwKQ8MDERpaWmD20xLS8PcuXPrfS8nJ6fBzy0a3LyYm2vr1q3SblBFGjuO1HzOfhyrqqqavS6TDyJShTNnzmDmzJnIycmBl5eXZNtNTk5GUlKSdbl2CmgAGD16dIMzSkak7pAsBgA4khon6fbUwGw2Iycnp9HjSE1zleN4613FpjD5ICJVKCoqwrlz53DPPfdYy2pqapCfn4/33nsPO3bswPXr13H58mWbux9lZWUICgpqcLt6vR56vb7e9zw8PBps7E010k5B78y/VJrS2HGk5nP242hP7Ew+iEgVRo0ahcOHD9uUTZ06Fb169cIf/vAHhISEwMPDA7m5uUhISAAAFBcX4/Tp04iKilIiZCJyEJMPIlIFHx8fRERE2JS1a9cO/v7+1vJp06YhKSkJfn5+MBgMmDFjBqKiohrsbEpE6sTkg4icxpIlS6DVapGQkGAzyRgRORcmH0SkWrt377ZZ9vLyQnp6OtLT05UJiIgkwUnGiIiISFZMPoiIiEhWTD6IiIhIVkw+iIiISFZMPoiIiEhWTD6IiIhIVkw+iIiISFZMPoiIiEhWTD6IiIhIVkw+iIiISFZMPoiIiEhWTD6IiIhIVkw+iIiISFZMPoiIiEhWdiUfGRkZ6NevHwwGAwwGA6KiorBt2zbr+9XV1TAajfD390f79u2RkJCAsrIyyYMmIiIi52VX8hEcHIyFCxeiqKgIBw4cwMiRI/HII4/gu+++AwDMnj0bW7ZswYYNG5CXl4ezZ89iwoQJrRI4EREROac29qw8duxYm+UFCxYgIyMDhYWFCA4OxurVq5GVlYWRI0cCADIzM9G7d28UFhbi3nvvlS5qIiIiclp2JR+3qqmpwYYNG1BZWYmoqCgUFRXBbDYjJibGuk6vXr0QGhqKgoKCBpMPk8kEk8lkXa6oqAAAmM1mmM3mRmPQ64Sj4derqf01tL69n3NFPBY3qf04qDUuInIvdicfhw8fRlRUFKqrq9G+fXtkZ2ejT58+OHToEDw9PdGhQweb9QMDA1FaWtrg9tLS0jB37tw65Tt37oS3t3ejsSwabG/0jdu6datDn8vJyZE2ECfGY3GTWo9DVVWV0iEQEdmffPTs2ROHDh1CeXk5PvnkEyQmJiIvL8/hAJKTk5GUlGRdrqioQEhICGJjY2EwGBr9bETqDof3W58jqXF2rW82m5GTk4PRo0fDw8ND0licDY/FTWo/DrV3FomcSdiczyXb1smFYyTbFjnO7uTD09MTd911FwAgMjIS+/fvxzvvvINJkybh+vXruHz5ss3dj7KyMgQFBTW4Pb1eD71eX6fcw8OjycbbVKOxN/xGOfrLojmxugsei5vUehzUGBMRuZ8Wz/NhsVhgMpkQGRkJDw8P5ObmWt8rLi7G6dOnERUV1dLdEBERkYuw685HcnIy4uPjERoaiitXriArKwu7d+/Gjh074Ovri2nTpiEpKQl+fn4wGAyYMWMGoqKiONKF7MJbrERErs2u5OPcuXN48skn8dNPP8HX1xf9+vXDjh07MHr0aADAkiVLoNVqkZCQAJPJhLi4OCxfvrxVAiciIiLnZFfysXr16kbf9/LyQnp6OtLT01sUFBEREbkuPtuFiIiIZMXkg4hUg8+PInIPTD6ISDX4/Cgi9+Dw9OpERFLj86OI3AOTDyJSpdZ+fhTQ+LNulH52lDOQ61lGUp4LNZ4HtT8TqrnsiZ/JBxGpilzPjwIafwaPWp4d5Qxa+1lGUp4LNZ8HtT4TqrnseXYUkw8iUhW5nh8FoNFn8Cj97ChnINezjKQ8F2o8D2p/JlRz2fPsKCYfRKQqcj0/Cmj8GTxqeXaUM2jtZxlJeS7UfB7U+kyo5rIndo52ISJV4/OjiFwP73wQkWrw+VFE7oHJB7VY2JzPodcJLBp887tZqW9Xk/vg86OI3AOTDyJSDT4/isg9sM8HERERyYrJBxEREcmKyQcRERHJiskHERERyYrJBxEREcmKyQcRERHJiskHERERyYrJBxEREcmKyQcRERHJiskHERERyYrJBxEREcmKyQcRERHJiskHERERyYrJBxEREcmKyQcRERHJiskHERERyYrJBxEREcmKyQcRERHJiskHERERyaqNPSunpaVh48aN+P7779G2bVvcd999ePPNN9GzZ0/rOtXV1XjppZewfv16mEwmxMXFYfny5QgMDJQ8eCIiIiWFzfm8xdvQ6wQWDZYgGCdi152PvLw8GI1GFBYWIicnB2azGbGxsaisrLSuM3v2bGzZsgUbNmxAXl4ezp49iwkTJkgeOBERETknu+58bN++3WZ5zZo1CAgIQFFREYYNG4by8nKsXr0aWVlZGDlyJAAgMzMTvXv3RmFhIe69917pIiciIiKnZFfycbvy8nIAgJ+fHwCgqKgIZrMZMTEx1nV69eqF0NBQFBQU1Jt8mEwmmEwm63JFRQUAwGw2w2w2N7p/vU60JPw6mtpfQ+vb+zlXo9cJ6LU3z0Xtv2oh97lR+zWh1riIyL04nHxYLBbMmjULQ4cORUREBACgtLQUnp6e6NChg826gYGBKC0trXc7aWlpmDt3bp3ynTt3wtvbu9EYpP6ObOvWrQ59LicnR9pAnMyt52HeQItygdTD0XPaUmq9JqqqqpQOgYjI8eTDaDTiyJEj2Lt3b4sCSE5ORlJSknW5oqICISEhiI2NhcFgaPSzEak7WrTv2x1JjbNrfbPZjJycHIwePRoeHh6SxuJMIlJ3QK8VmDfQglcPaGGyaJQOycrec9pSar8mau8sEhEpyaHkY/r06fjss8+Qn5+P4OBga3lQUBCuX7+Oy5cv29z9KCsrQ1BQUL3b0uv10Ov1dco9PDyabLxNNdL+knP0l0VzYnVlt54Hk0Uj+XlpCaXOi1qvCTXGRETux67RLkIITJ8+HdnZ2fjiiy8QHh5u835kZCQ8PDyQm5trLSsuLsbp06cRFRUlTcRERETk1OxKPoxGI9atW4esrCz4+PigtLQUpaWluHbtGgDA19cX06ZNQ1JSEnbt2oWioiJMnToVUVFRHOlCRI1KS0vDoEGD4OPjg4CAAIwfPx7FxcU261RXV8NoNMLf3x/t27dHQkICysrKFIqYiBxlV/KRkZGB8vJyjBgxAl26dLG+Pv74Y+s6S5YswcMPP4yEhAQMGzYMQUFB2Lhxo+SBE5Fr4TxCRO7Drj4fQjQ9jNLLywvp6elIT093OCgicj+cR4jIfbRong8iotYixTxCQMNzCQGNz3ui9DxCzkCueW2kPBdSxypFbLXzIzn7NWJP/Ew+yKVJ8dyFW51cOEbS7VH9pJpHCGh4LiGg8flY1DKPkDNo7XltpDwXUp8HKWNT6/xAzWXPPEJMPohIdaSaRwhoeC4hAI3Ox6L0PELOQK55baQ8F1KfByliq50nSa3zAzWXPfMIMfkgIlWRch4hoOG5hIDG52NRyzxCzqC157WR8lxIHafUsTnzdWJP7HaNdiEiai2cR4jIffDOBxGpgtFoRFZWFjZv3mydRwi4OX9Q27ZtbeYR8vPzg8FgwIwZMziPEJETYvJBRKqQkZEBABgxYoRNeWZmJqZMmQLg5jxCWq0WCQkJMJlMiIuLw/Lly2WOlIhaiskHEakC5xEich/s80FERESyYvJBREREsmLyQURERLJi8kFERESyYvJBREREsmLyQURERLJi8kFERESyYvJBREREsmLyQURERLJi8kFERESyYvJBREREsmLyQURERLJi8kFERESyYvJBREREsmqjdABqEjbnc7vW1+sEFg0GIlJ3wFSjsXnv5MIxUoZGRETkMph8EBERuSB7/6BuipR/VPNrFyIiIpIVkw8iIiKSFZMPIiIikhWTDyIiIpIVkw8iIiKSFZMPIiIikpXdQ23z8/OxePFiFBUV4aeffkJ2djbGjx9vfV8IgZSUFKxatQqXL1/G0KFDkZGRgR49ekgZN5Eimhq61tjcL/XhfDBE5I7svvNRWVmJ/v37Iz09vd73Fy1ahGXLlmHFihXYt28f2rVrh7i4OFRXV7c4WCIiInJ+dt/5iI+PR3x8fL3vCSGwdOlS/OlPf8IjjzwCAFi7di0CAwOxadMmPPbYYy2LloiIiJyepDOclpSUoLS0FDExMdYyX19fDBkyBAUFBfUmHyaTCSaTybpcUVEBADCbzTCbzY3uT68TEkXuGL1W2Px7q6ZidyV6nWj0WLgTe4+D3NeJO12XRKRekiYfpaWlAIDAwECb8sDAQOt7t0tLS8PcuXPrlO/cuRPe3t6N7m/RYAcDldi8gZY6ZVu3blUgEmXceh7qOxbuqLnHQe7rpKqqStb92Yt9yojcg+LPdklOTkZSUpJ1uaKiAiEhIYiNjYXBYGj0sxGpO1o7vEbptQLzBlrw6gEtTBbbzoVHUuMUikp+Eak7Gj0W7sTe4yD3dVJ7Z1GtavuUPfXUU5gwYUKd92v7lH344YcIDw/Hq6++iri4OBw9ehReXl4KRExEjpA0+QgKCgIAlJWVoUuXLtbysrIyDBgwoN7P6PV66PX6OuUeHh7w8PBodH/NGU0gB5NFUyeWpmJ3JbfWvb5j4Y6aexzkvk7Ufl2yTxmRe5A0+QgPD0dQUBByc3OtyUZFRQX27duH559/XspdEZGbcaRPGdBwvzKg8T4wUvcpc8X+NrV1au26SXkupI5Vithq+4ipMbZbNRWfPfHbnXxcvXoVx48fty6XlJTg0KFD8PPzQ2hoKGbNmoX58+ejR48e1tuiXbt2tfnelojIXo70KQMa7lcGADk5OQ1+Tuo+Za7cD6yx4ygFKc+F1OdBytikPo5yX8P29CmzO/k4cOAAHnjgAetybX+NxMRErFmzBr///e9RWVmJZ555BpcvX8b999+P7du38/tYIlJEQ/3KAGD06NENfhUldZ8yV+wHZjabkZOT0+hxlIKU50Lq8yBFbLV9xaQ+jnJfw/b0KbM7+RgxYgSEaPhWjkajweuvv47XX3/d3k0TETXIkT5lQMP9yoDG+5ZJ3XdJ7f1tWqI5ffRaQspzIXWcUscmZXxyX8P2xM5nuxCRU7i1T1mt2j5lUVFRCkZGRPZSfKgtKaOpZ5QQKYF9ysidNfeZUK6AyQcRqQb7lBG5ByYfRKQa7FNG5B6YfBARyUDqrzpPLhwj6fakxK91qSnscEpERESyYvJBREREsmLyQURERLJinw8iIjfnaB8NvU5g0WD3GiJK0uCdDyIiIpIVkw8iIiKSFZMPIiIikhX7fBARkdvgHCTqwDsfREREJCve+SBSkJR/hal5xksiolvxzgcRERHJiskHERERyYrJBxEREcmKyQcRERHJiskHERERyYrJBxEREcmKyQcRERHJivN8OAnOykdERK6Cdz6IiIhIVkw+iIiISFZMPoiIiEhWTD6IiIhIVkw+iIiISFZMPoiIiEhWTD6IiIhIVq2WfKSnpyMsLAxeXl4YMmQIvv7669baFRG5GbYvRM6tVSYZ+/jjj5GUlIQVK1ZgyJAhWLp0KeLi4lBcXIyAgIDW2CURuQm2Lzdx4kFyZq1y5+Ptt9/G008/jalTp6JPnz5YsWIFvL298Ze//KU1dkdEboTtC5Hzk/zOx/Xr11FUVITk5GRrmVarRUxMDAoKCuqsbzKZYDKZrMvl5eUAgIsXL8JsNje6rzY3KiWK2jFtLAJVVRa0MWtRY9HYvHfhwgVp96VwXZvS2LFwJ0oeh+Zcc1euXAEACCFaO5xWYW/7AjTcxlRVVeHChQvw8PCo93Nq/5lTA/7cS8NZjmNTbYxd7YuQ2I8//igAiK+++sqm/OWXXxaDBw+us35KSooAwBdffMn4OnPmjNQ/+rKwt30Rgm0MX3zJ/WpO+6L4g+WSk5ORlJRkXbZYLLh48SL8/f2h0ag3AwSAiooKhISE4MyZMzAYDEqHoygei5vUfhyEELhy5Qq6du2qdCiyqa+NOXXqFAYMGKDa8+Qs1H69OwtXOY72tC+SJx+dOnWCTqdDWVmZTXlZWRmCgoLqrK/X66HX623KOnToIHVYrcpgMDj1BSMlHoub1HwcfH19lQ7BYfa2L0D9bYxWe7O7m5rPkzPhcZSGKxzH5rYvknc49fT0RGRkJHJzc61lFosFubm5iIqKknp3RORG2L4QuYZW+dolKSkJiYmJGDhwIAYPHoylS5eisrISU6dObY3dEZEbYftC5PxaJfmYNGkSzp8/j9deew2lpaUYMGAAtm/fjsDAwNbYnWL0ej1SUlLq3NJ1RzwWN/E4tD4p2heeJ2nwOErDHY+jRggnHXNHRERETonPdiEiIiJZMfkgIiIiWTH5ICIiIlkx+SAiIiJZMfkgIiIiWTH5cEBaWhoGDRoEHx8fBAQEYPz48SguLlY6LMUtXLgQGo0Gs2bNUjoURfz444/47W9/C39/f7Rt2xa//OUvceDAAaXDonqkp6cjLCwMXl5eGDJkCL7++mulQ3Iq+fn5GDt2LLp27QqNRoNNmzYpHZLTcfffI0w+HJCXlwej0YjCwkLk5OTAbDYjNjYWlZXu+xTM/fv34/3330e/fv2UDkURly5dwtChQ+Hh4YFt27bh6NGjeOutt9CxY0elQ6PbfPzxx0hKSkJKSgoOHjyI/v37Iy4uDufOnVM6NKdRWVmJ/v37Iz09XelQnJa7/x7hPB8SOH/+PAICApCXl4dhw4YpHY7srl69invuuQfLly/H/PnzMWDAACxdulTpsGQ1Z84cfPnll9izZ4/SoVAThgwZgkGDBuG9994DcHN69pCQEMyYMQNz5sxRODrno9FokJ2djfHjxysdilNzt98jvPMhgfLycgCAn5+fwpEow2g0YsyYMYiJiVE6FMV8+umnGDhwIH79618jICAAd999N1atWqV0WHSb69evo6ioyOZa1Wq1iImJQUFBgYKRkbtzt98jTD5ayGKxYNasWRg6dCgiIiKUDkd269evx8GDB5GWlqZ0KIo6ceIEMjIy0KNHD+zYsQPPP/88XnzxRXz44YdKh0a3+Pnnn1FTU1NnKvbAwECUlpYqFBW5O3f8PdIqz3ZxJ0ajEUeOHMHevXuVDkV2Z86cwcyZM5GTkwMvLy+lw1GUxWLBwIED8cYbbwAA7r77bhw5cgQrVqxAYmKiwtERkZq54+8R3vlogenTp+Ozzz7Drl27EBwcrHQ4sisqKsK5c+dwzz33oE2bNmjTpg3y8vKwbNkytGnTBjU1NUqHKJsuXbqgT58+NmW9e/fG6dOnFYqI6tOpUyfodDqUlZXZlJeVlSEoKEihqMiduevvESYfDhBCYPr06cjOzsYXX3yB8PBwpUNSxKhRo3D48GEcOnTI+ho4cCAmT56MQ4cOQafTKR2ibIYOHVpnmNwPP/yAbt26KRQR1cfT0xORkZHIzc21llksFuTm5iIqKkrByMjduPvvEX7t4gCj0YisrCxs3rwZPj4+1u+KfX190bZtW4Wjk4+Pj0+d7yfbtWsHf39/t/nestbs2bNx33334Y033sDEiRPx9ddfY+XKlVi5cqXSodFtkpKSkJiYiIEDB2Lw4MFYunQpKisrMXXqVKVDcxpXr17F8ePHrcslJSU4dOgQ/Pz8EBoaqmBkzsPtf48IshuAel+ZmZlKh6a44cOHi5kzZyodhiK2bNkiIiIihF6vF7169RIrV65UOiRqwLvvvitCQ0OFp6enGDx4sCgsLFQ6JKeya9euetvAxMREpUNzGu7+e4TzfBAREZGs2OeDiIiIZMXkg4iIiGTF5IOIiIhkxeSDiIiIZMXkg4iIiGTF5IOIiIhkxeSDiIiIZMXkg4iIiGTF5IOIiIhkxeSDiIiIZMXkg4iIiGT1f+wSc5QVIuMZAAAAAElFTkSuQmCC\n"},"metadata":{}}],"source":["#histogram\n","dataset.hist()\n","pyplot.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GMe6teqmIV9e","colab":{"base_uri":"https://localhost:8080/","height":453},"executionInfo":{"status":"ok","timestamp":1697373240526,"user_tz":-330,"elapsed":1972,"user":{"displayName":"MCA22 Manoj Kumar Satapathy","userId":"06333953726233089071"}},"outputId":"09cf713d-ff85-466e-997a-99bd955e75aa"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 16 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["#scatter plot matrix\n","scatter_matrix(dataset)\n","pyplot.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"C-9jsD_UIijF"},"outputs":[],"source":["#Split out validation dataset\n","array = dataset.values\n","X = array[:,0:4]\n","Y = array[:,4]\n","X_train , X_validation , Y_train , Y_validation = train_test_split(X , Y , test_size = 0.20 , random_state = 1)\n","#Spot Check Algorithms\n","models = []\n","models.append(('LR' , LogisticRegression(solver = 'liblinear' , multi_class = 'ovr')))\n","models.append(('LDA' , LinearDiscriminantAnalysis()))\n","models.append(('KNN' , KNeighborsClassifier()))\n","models.append(('CART' , DecisionTreeClassifier()))\n","models.append(('NB' , GaussianNB()))\n","models.append(('SVM' , SVC(gamma = 'auto')))\n","#evaluate each model in turn\n","results = []\n","names = []\n","for name , model in models:\n","  kfold = StratifiedKFold(n_splits = 10 , random_state = 1 , shuffle = True)\n","  cv_results = cross_val_score(model , X_train , Y_train , cv = kfold , scoring= 'accuracy')\n","  results.append(cv_results)\n","  names.append(name)\n","  print(\"%s: %f (%f)\"%(name , cv_results.mean() , cv_results.std()))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"x9AZQmlJI81T"},"outputs":[],"source":["#Compare Algorithms\n","pyplot.boxplot(results , labels = names)\n","pyplot.title('Algorithm Comparison')\n","pyplot.show()"]},{"cell_type":"markdown","metadata":{"id":"Hei9AUPzMoOz"},"source":["P9"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QjIblYC0MpU8"},"outputs":[],"source":["from pandas import read_csv\n","from pandas.plotting import scatter_matrix\n","from matplotlib import pyplot\n","from sklearn.model_selection import train_test_split\n","from sklearn.model_selection import cross_val_score\n","from sklearn.model_selection import StratifiedKFold\n","from sklearn.metrics import classification_report\n","from sklearn.metrics import confusion_matrix\n","from sklearn.metrics import accuracy_score\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.discriminant_analysis import LinearDiscriminantAnalysis\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.svm import SVC"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kJvw_zSYMw2J","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1696923105773,"user_tz":-330,"elapsed":11,"user":{"displayName":"Rakhee Sharma","userId":"04262515988146939646"}},"outputId":"c451cbb4-2856-45de-90e7-ebc65048d315"},"outputs":[{"output_type":"stream","name":"stdout","text":["(150, 5)\n"]}],"source":["#load dataset\n","url = \"https://raw.githubusercontent.com/jbrownlee/Datasets/master/iris.csv\"\n","names = ['sepal-length' , 'sepal-width' , 'petal-length' , 'petalwidth'\n",", 'class']\n","dataset = read_csv(url , names = names)\n","print(dataset.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TX7754rkNXuy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1696923109690,"user_tz":-330,"elapsed":3,"user":{"displayName":"Rakhee Sharma","userId":"04262515988146939646"}},"outputId":"0e255750-bd38-4d34-953a-2a82c20f8272"},"outputs":[{"output_type":"stream","name":"stdout","text":["True\n","     sepal-length  sepal-width  petal-length  petalwidth           class\n","34            4.9          3.1           1.5         0.1     Iris-setosa\n","37            4.9          3.1           1.5         0.1     Iris-setosa\n","142           5.8          2.7           5.1         1.9  Iris-virginica\n"]}],"source":["#locating dataset variables\n","dups = dataset.duplicated()\n","print(dups.any())\n","print(dataset[dups])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DMsJ79C-NaVS"},"outputs":[],"source":["print(dataset.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ssAEWmGVNkOw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1696923122414,"user_tz":-330,"elapsed":1148,"user":{"displayName":"Rakhee Sharma","userId":"04262515988146939646"}},"outputId":"53d9b6e0-61ad-4400-95f0-eda5c61c17d0"},"outputs":[{"output_type":"stream","name":"stdout","text":["(147, 5)\n"]}],"source":["dataset.drop_duplicates(inplace = True)\n","print(dataset.shape)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Cr5WXXmrNwqg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1696923380987,"user_tz":-330,"elapsed":452,"user":{"displayName":"Rakhee Sharma","userId":"04262515988146939646"}},"outputId":"36816db0-593e-4b03-e70f-b74202b6ec2d"},"outputs":[{"output_type":"stream","name":"stdout","text":["LR: 0.948485 (0.077094)\n","LDA: 0.974242 (0.039394)\n","KNN: 0.965152 (0.042748)\n","CART: 0.965909 (0.041804)\n","NB: 0.949242 (0.067083)\n","SVM: 0.964394 (0.059656)\n"]}],"source":["array = dataset.values\n","x = array[:,0:4]\n","y = array[:,4]\n","x_train , x_validation , y_train , y_validation = train_test_split(x , y , test_size = 0.20 , random_state = 1)\n","models = []\n","models.append(('LR',LogisticRegression(solver = 'liblinear',multi_class = 'ovr')))\n","models.append(('LDA',LinearDiscriminantAnalysis()))\n","models.append(('KNN',KNeighborsClassifier()))\n","models.append(('CART',DecisionTreeClassifier()))\n","models.append(('NB',GaussianNB()))\n","models.append(('SVM',SVC(gamma = 'auto')))\n","#evaluate each model in turn\n","results = []\n","names = []\n","for name , model in models:\n","  kfold = StratifiedKFold(n_splits = 10 , random_state = 1 , shuffle = True)\n","  cv_results = cross_val_score(model , x_train , y_train , cv = kfold , scoring= 'accuracy')\n","  results.append(cv_results)\n","  names.append(name)\n","  print('%s: %f (%f)'%(name , cv_results.mean() , cv_results.std()))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SINL-VWdN7sc","colab":{"base_uri":"https://localhost:8080/","height":452},"executionInfo":{"status":"ok","timestamp":1696923895133,"user_tz":-330,"elapsed":1208,"user":{"displayName":"Rakhee Sharma","userId":"04262515988146939646"}},"outputId":"da09a6f3-cce4-4d7c-bfaf-52d752b3a633"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["pyplot.boxplot(results , labels = names)\n","pyplot.title('Algorithm Comparison')\n","pyplot.show()"]},{"cell_type":"markdown","metadata":{"id":"wcD9eOEiYiG9"},"source":["P24"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qSx_WwkAahz4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1696920251117,"user_tz":-330,"elapsed":705,"user":{"displayName":"Rakhee Sharma","userId":"04262515988146939646"}},"outputId":"d76be2fb-f9aa-496c-fc1d-3350d932c9f3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.45014943]])"]},"metadata":{},"execution_count":1}],"source":["# Import python libraries required in this example:\n","import numpy as np\n","from scipy.special import expit as activation_function\n","from scipy.stats import truncnorm\n","# DEFINE THE NETWORK\n","# Generate random numbers within a truncated (bounded)\n","# normal distribution:\n","def truncated_normal(mean=0, sd=1, low=0, upp=10):\n","    return truncnorm(\n","        (low - mean) / sd, (upp - mean) / sd, loc=mean, scale=sd)\n"," # Create the ‘Nnetwork’ class and define its arguments:\n","# Set the number of neurons/nodes for each layer\n","# and initialize the weight matrices:\n","class Nnetwork:\n","    def __init__(self,\n","                 no_of_in_nodes,\n","                 no_of_out_nodes,\n","                 no_of_hidden_nodes,\n","                 learning_rate):\n","        self.no_of_in_nodes = no_of_in_nodes\n","        self.no_of_out_nodes = no_of_out_nodes\n","        self.no_of_hidden_nodes = no_of_hidden_nodes\n","        self.learning_rate = learning_rate\n","        self.create_weight_matrices()\n","\n","    def create_weight_matrices(self):\n","        \"\"\" A method to initialize the weight matrices of the neural network\"\"\"\n","        rad = 1 / np.sqrt(self.no_of_in_nodes)\n","        X = truncated_normal(mean=0, sd=1, low=-rad, upp=rad)\n","        self.weights_in_hidden = X.rvs((self.no_of_hidden_nodes,\n","                                       self.no_of_in_nodes))\n","        rad = 1 / np.sqrt(self.no_of_hidden_nodes)\n","        X = truncated_normal(mean=0, sd=1, low=-rad, upp=rad)\n","        self.weights_hidden_out = X.rvs((self.no_of_out_nodes,\n","                                        self.no_of_hidden_nodes))\n","    def train(self, input_vector, target_vector):\n","        pass # More work is needed to train the network\n","\n","    def run(self, input_vector):\n","        \"\"\"\n","        running the network with an input vector 'input_vector'.\n","        'input_vector' can be tuple, list or ndarray\n","        \"\"\"\n","        # Turn the input vector into a column vector:\n","        input_vector = np.array(input_vector, ndmin=2).T\n","        # activation_function() implements the expit function,\n","        # which is an implementation of the sigmoid function:\n","        input_hidden = activation_function(self.weights_in_hidden @   input_vector)\n","        output_vector = activation_function(self.weights_hidden_out @ input_hidden)\n","        return output_vector\n"," # RUN THE NETWORK AND GET A RESULT\n","# Initialize an instance of the class:\n","simple_network = Nnetwork(no_of_in_nodes=2,\n","                               no_of_out_nodes=1,\n","                               no_of_hidden_nodes=2,\n","                               learning_rate=0.6)\n"," # Run simple_network for arrays, lists and tuples with shape (2):\n","# and get a result:\n","simple_network.run([(3, 4)])"]},{"cell_type":"markdown","metadata":{"id":"ghtAB-yjbj1Q"},"source":["P22"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"k11delD3bVW4"},"outputs":[],"source":["import numpy as np\n","\n","class NeuralNetwork():\n","\n","    def __init__(self):\n","        # seeding for random number generation\n","        np.random.seed(1)\n","\n","        #converting weights to a 3 by 1 matrix with values from -1 to 1 and mean of 0\n","        self.synaptic_weights = 2 * np.random.random((3, 1)) - 1\n","\n","    def sigmoid(self, x):\n","        #applying the sigmoid function\n","        return 1 / (1 + np.exp(-x))\n","\n","    def sigmoid_derivative(self, x):\n","        #computing derivative to the Sigmoid function\n","        return x * (1 - x)\n","\n","    def train(self, training_inputs, training_outputs, training_iterations):\n","\n","        #training the model to make accurate predictions while adjusting weights continually\n","        for iteration in range(training_iterations):\n","            #siphon the training data via  the neuron\n","            output = self.think(training_inputs)\n","\n","            #computing error rate for back-propagation\n","            error = training_outputs - output\n","\n","            #performing weight adjustments\n","            adjustments = np.dot(training_inputs.T, error * self.sigmoid_derivative(output))\n","\n","            self.synaptic_weights += adjustments\n","\n","    def think(self, inputs):\n","        #passing the inputs via the neuron to get output\n","        #converting values to floats\n","\n","        inputs = inputs.astype(float)\n","        output = self.sigmoid(np.dot(inputs, self.synaptic_weights))\n","        return output\n","\n","\n","if __name__ == \"__main__\":\n","\n","    #initializing the neuron class\n","    neural_network = NeuralNetwork()\n","\n","    print(\"Beginning Randomly Generated Weights: \")\n","    print(neural_network.synaptic_weights)\n","\n","    #training data consisting of 4 examples--3 input values and 1 output\n","    training_inputs = np.array([[0,0,1],\n","                                [1,1,1],\n","                                [1,0,1],\n","                                [0,1,1]])\n","\n","    training_outputs = np.array([[0,1,1,0]]).T\n","\n","    #training taking place\n","    neural_network.train(training_inputs, training_outputs, 15000)\n","\n","    print(\"Ending Weights After Training: \")\n","    print(neural_network.synaptic_weights)\n","\n","    user_input_one = str(input(\"User Input One: \"))\n","    user_input_two = str(input(\"User Input Two: \"))\n","    user_input_three = str(input(\"User Input Three: \"))\n","\n","    print(\"Considering New Situation: \", user_input_one, user_input_two, user_input_three)\n","    print(\"New Output data: \")\n","    print(neural_network.think(np.array([user_input_one, user_input_two, user_input_three])))\n","    print(\"Its all done!!!\")\n","1"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1248,"status":"ok","timestamp":1696920886659,"user":{"displayName":"Rakhee Sharma","userId":"04262515988146939646"},"user_tz":-330},"id":"59-Nt3_Adj8-","outputId":"422f223b-e6d7-4fbe-b9df-bf725c9c9e7b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 1, 2, ..., 8, 9, 8])"]},"metadata":{},"execution_count":2}],"source":["#loading libaraties\n","import matplotlib.pyplot as plt\n","import numpy as np\n","from sklearn.datasets import load_digits\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import classification_report,confusion_matrix\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","x,y = load_digits(return_X_y=True)\n","x\n","y"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":92},"executionInfo":{"elapsed":421,"status":"ok","timestamp":1696920890039,"user":{"displayName":"Rakhee Sharma","userId":"04262515988146939646"},"user_tz":-330},"id":"gMVH47Q3d08o","outputId":"e0d6b474-8f76-4704-9637-3629ab197054"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(C=0.05, multi_class='ovr', random_state=0,\n","                   solver='liblinear')"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression(C=0.05, multi_class=&#x27;ovr&#x27;, random_state=0,\n","                   solver=&#x27;liblinear&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression(C=0.05, multi_class=&#x27;ovr&#x27;, random_state=0,\n","                   solver=&#x27;liblinear&#x27;)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":3}],"source":["#Split Data\n","x_train,x_test,y_train,y_test =\\\n","train_test_split(x,y,test_size=0.2,random_state=0)\n","#scale data\n","scaler =StandardScaler()\n","x_train = scaler.fit_transform(x_train)\n","#create a model and train it\n","model = LogisticRegression(solver='liblinear',C=0.05,multi_class='ovr',random_state=0)\n","model.fit(x_train,y_train)"]},{"cell_type":"code","source":["pip install pandas\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OPPTtcWvchss","executionInfo":{"status":"ok","timestamp":1696955807699,"user_tz":-330,"elapsed":8152,"user":{"displayName":"Rakhee Sharma","userId":"04262515988146939646"}},"outputId":"2815fcf8-ee1f-4dd0-ff73-af8c316132cd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (1.5.3)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2023.3.post1)\n","Requirement already satisfied: numpy>=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas) (1.23.5)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.1->pandas) (1.16.0)\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Load MovieLens dataset\n","movies = pd.read_csv('movies.csv')\n","ratings = pd.read_csv('ratings.csv')\n","\n","# Calculate the IMDb score for each movie\n","imdb_scores = pd.read_csv('ratings.csv')  # Assuming you have IMDb scores for movies\n","\n","# Merge MovieLens and IMDb data\n","movie_data = movies.merge(imdb_scores, on='movieId', how='inner')\n","movie_data = movie_data.merge(ratings.groupby('movieId')['rating'].mean().reset_index(), on='movieId', how='left')\n","\n","# Define the metric to rate movies (e.g., weighted average of IMDb and MovieLens ratings)\n","def calculate_movie_score(row, imdb_weight=0.7):\n","    imdb_rating = row['imdb_rating']\n","    movielens_rating = row['rating']\n","    return (imdb_weight * imdb_rating) + ((1 - imdb_weight) * movielens_rating)\n","\n","# Calculate scores for each movie\n","movie_data['score'] = movie_data.apply(calculate_movie_score, axis=1)\n","\n","# Sort movies based on the score\n","top_250_movies = movie_data.sort_values(by='score', ascending=False).head(250)\n","\n","# Print the top-rated movies\n","print(top_250_movies[['title', 'score']])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":511},"id":"lHQcSPBGcu_P","executionInfo":{"status":"error","timestamp":1696956129698,"user_tz":-330,"elapsed":782,"user":{"displayName":"Rakhee Sharma","userId":"04262515988146939646"}},"outputId":"d1db2ecf-d778-4def-a754-4d00f50922f8"},"execution_count":null,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3801\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3802\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3803\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'imdb_rating'","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-6b45f59dd29a>\u001b[0m in \u001b[0;36m<cell line: 21>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     19\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     20\u001b[0m \u001b[0;31m# Calculate scores for each movie\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 21\u001b[0;31m \u001b[0mmovie_data\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'score'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmovie_data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcalculate_movie_score\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     22\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     23\u001b[0m \u001b[0;31m# Sort movies based on the score\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self, func, axis, raw, result_type, args, **kwargs)\u001b[0m\n\u001b[1;32m   9566\u001b[0m             \u001b[0mkwargs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   9567\u001b[0m         )\n\u001b[0;32m-> 9568\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mop\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__finalize__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"apply\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   9569\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   9570\u001b[0m     def applymap(\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/apply.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    762\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply_raw\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    763\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 764\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply_standard\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    765\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    766\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0magg\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/apply.py\u001b[0m in \u001b[0;36mapply_standard\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    889\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    890\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mapply_standard\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 891\u001b[0;31m         \u001b[0mresults\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mres_index\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply_series_generator\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    892\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    893\u001b[0m         \u001b[0;31m# wrap results\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/apply.py\u001b[0m in \u001b[0;36mapply_series_generator\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    905\u001b[0m             \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mv\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mseries_gen\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    906\u001b[0m                 \u001b[0;31m# ignore SettingWithCopy here in case the user mutates\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 907\u001b[0;31m                 \u001b[0mresults\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mv\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    908\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresults\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mABCSeries\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    909\u001b[0m                     \u001b[0;31m# If we have a view on v, we need to make a copy because\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-3-6b45f59dd29a>\u001b[0m in \u001b[0;36mcalculate_movie_score\u001b[0;34m(row, imdb_weight)\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0;31m# Define the metric to rate movies (e.g., weighted average of IMDb and MovieLens ratings)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mcalculate_movie_score\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrow\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mimdb_weight\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.7\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 16\u001b[0;31m     \u001b[0mimdb_rating\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mrow\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'imdb_rating'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     17\u001b[0m     \u001b[0mmovielens_rating\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mrow\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'rating'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     18\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mimdb_weight\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mimdb_rating\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0mimdb_weight\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m*\u001b[0m \u001b[0mmovielens_rating\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m    979\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    980\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0mkey_is_scalar\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 981\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_value\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    982\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    983\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mis_hashable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36m_get_value\u001b[0;34m(self, label, takeable)\u001b[0m\n\u001b[1;32m   1087\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1088\u001b[0m         \u001b[0;31m# Similar to Index.get_value, but we do not fall back to positional\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1089\u001b[0;31m         \u001b[0mloc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1090\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_values_for_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mloc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1091\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3802\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3803\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3804\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3805\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3806\u001b[0m                 \u001b[0;31m# If we have a listlike key, _check_indexing_error will raise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'imdb_rating'"]}]}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"accelerator":"TPU"},"nbformat":4,"nbformat_minor":0}